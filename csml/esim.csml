// This is a template. It will not work before being processed by the system


start:
  // if bitpart receives passcode, set admin
  do passcode = event
  do passcode.to_uppercase()

  if (passcode.contains("[passcode]")) {
    // set _whisperable var in memory
    remember _whisperable = true

    say Text("Welcome, you are now set up as a user who can receive messages from people who have asked for human support. You will receive messages from users as they come in. Otherwise, send a message that says 'Help' at any time to exit the conversation or delete your data.")
    hold

    if (event.to_lowercase() == "help") {
      goto admin_interface_step
    }
  }
  // if _whisperable is set, user is already an admin
  if (event._whisperable == true) {
    goto admin_interface_step
  }
  else
    remember count = 0
    // conversation is triggered by a message from a user who says they need an esim
    // TODO Bitpart interprets incoming language. Response is in the same language
    // TODO check if the user has contacted this line before

    say Text("Thank you for contacting [name]. We help people in conflict zones get e-sims for free. We only provide eSIMs for people in certain locations.

We use an automated messaging system so you can get quicker responses, but you can always reach a human.")

    goto menu_step

admin_interface_step:
  say Text("What would you like to do? Enter a number:

1. Receive messages
2. Exit this conversation
3. Delete my data")
  hold

  if (event == 1) {
    
    // TODO JOSH: how does the admin ask for the messages left for them?

    goto admin_interface_step
  } else if (event == 2) {
    say "I am now closing this conversation. Please send the passcode again if you need me."

    goto end
  } else if (event == 3) {
    goto delete_me_confirm_step
  } else if (event.to_lowercase() == "help") {
    goto admin_interface_step
  } else {
    say "Sorry, I did not get that. Please select an option from the list."

    goto admin_interface_step
  }

delete_me_confirm_step:
  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.
  
Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Go back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "go back") {
    goto admin_interface_step
  } else
    say "Sorry, I did not get that."
    do count += 1
    goto delete_me_confirm_step

confirm_delete_step:
  say "All your data will now be deleted and you will no longer receive messages."
  delete
  goto end

menu_step:
  if (count >= 3) {
    goto human_support_step
  }

  // TODO remove option 3
  say Text("**Menu**

What would you like to do?

1. Get an eSIM
2. Get help with my eSIM
3. My data rights
4. About us

Enter the number")
  hold

  if (event == 1) {
    goto get_esim_1_step
  } else if (event == 2) {
    goto help_step
  } else if (event == 3) {
    say "[privacyPolicy]"
    
    goto menu_options_step
  } else if (event == 4) {
    say "[description]"

    goto menu_options_step
  }

menu_options_step:
  if (count >= 3) {
    say "Sorry, I did not get that."
    goto human_support_step
  }
  
  say Text("What would you like to do now?

Reply with 'Main menu' to go back to the main menu.

Reply with 'Help' to go back to the help menu.

Reply with 'Talk to a human' to get more support.

Reply with 'End' to end this chat for today.")
  hold 

  if (event.to_lowercase() == "main menu") {
    goto menu_step
  } else if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    
    goto end
  } else {
    say "Sorry, I did not get that."
    do count += 1
    goto check_if_solved_step
  }

get_esim_1_step:
  if (count >= 3) {
    goto human_support_step
  }

  say ("**STEP 1:**

First, you need to make sure that your phone is compatible.

To do this, please go to your phone's Settings > Connections or SIM Manager. If your device is eSIM compatible you should be able to see if you have the option to add an eSIM.

Alternatively open your phone app, dial *#06# and press the call button. If your device is eSIM compatible you should be able to see an EID number.

Is your device e-sim compatible? Reply with 'Yes' or 'No'.")
  hold

  if (event.to_lowercase() == "yes") {
    goto get_esim_2_step
  } else if (event.to_lowercase() == "no") {
    say Text("Sorry, an eSIM won't work for your device.
    
Would you like to flag this to our team? Reply with 'Yes' if so, or 'No' to end this conversation.")
    hold

    if (event.to_lowercase() == "yes") {
      goto human_support_step
    } else if (event.to_lowercase() == "no") {
      say "Please contact us again if you need us."
      
      goto end
    } else {
      say "Sorry, I did not get that."
      do count += 1
      goto get_esim_1_step
    }

  } else {
    say "Sorry, I did not get that."
    do count += 1
    goto get_esim_1_step
  }

get_esim_2_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("**Step 2:**

Which networks are available where you are?

To find out, go to Settings > Local SIM Settings > Network Selection > Toggle Automatic Network Selection

Which of the following mobile networks do you see?

[locations]

List all networks available separated by a comma  e.g. :
1,2,5")
  hold

  remember locations = event

  // external app call to EMS to notify of locations; handle no locations match
  remember providers = App("ems", method_id="GetProviders")

  goto get_esim_3_step

get_esim_3_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("**Step 3:**

A code will follow with you unique eSIM.

Here are the instructions for it to work:

[activationInstructions]

If you can't get it to work, reply with 'Help'.")
  hold

  // external app call to EMS for an esim code from 1 network
  do esim = App("ems", method_id = "EsimData", provider=providers[0])

  if (event.to_lowercase() == "help") {
    goto help_step
  } else {
    do count += 1
    goto get_esim_3_step
  }

  goto menu_options_step

help_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("**Help**

1. How to activate an e-sim
2. My e-sim isn't working
3. Delete my eSIM
4. Other")
  hold

  if (event == 1) {
    say Text("**eSIM Activation**

[activationInstructions]")
    
    goto follow_up_step
  } else if (event == 2) {
    say Text("**eSIM Troubleshooting**

[helpInstructions]")

    goto follow_up_step
  } else if (event == 3) {
    say Text("**DELETE eSIM**

Step 1: Open your phone's Settings.
2. Tap on 'Connections' (Android)
3. Then, choose 'SIM card manager.'
4. Pick the eSIM plan you want to delete.
5. Turn off the eSIM by toggling the switch. Finally, tap on 'Remove'.")
    
    goto follow_up_step
  } else if (event == 4) {
    goto human_support_step
  } else { 
    say "Sorry, I did not get that."
    do count += 1
    goto help_step
  }

follow_up_step:
  say Text("What would you like to do now?

Reply with 'Help' to go back to the help menu

Reply with 'Human' to get more support

Reply with 'End' to end this chat for today.")
    hold

    if (event.to_lowercase() == "help") {
      goto help_step
    } else if (event.to_lowercase() == "human") {
      goto human_support_step
    } else if (event.to_lowercase() == "end") {
      say "Thanks for using this service, we hope your eSIM helps."
      
      goto end
    } else {
      say "Sorry, I did not get that."
      do count += 1
      goto help_step
    }

human_support_step:
  say "We've understood that you have a question not covered in the Help section.

Please share what you need help with and a member of our team will get back to you."
  hold

  remember problem = event

  // flag relevant data to bitpart
  whisper "A user had a problem not covered in the help section of the eSIM distribution: {{problem}}. Contact phone: {{event.client.user_id}}"

  say "Thank you. An admin will continue this conversation. Please note that it might take some time for them to get in touch."

  goto end
