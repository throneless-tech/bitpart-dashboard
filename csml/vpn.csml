// This is a template. It will not work before being processed by the system

fn parse_codes(c) {
  do codes_string = ""
  foreach (item) in c {
    do codes_string = codes_string + "Provider: {{item.provider}}
Code: {{item.secret}}
=====
"
  }

  return codes_string
}

start:
// if bitpart receives passcode, set admin
  do passcode = event.to_uppercase()

  if (passcode.contains("[passcode]")) {
    // set _whisperable var in memory
    remember _whisperable = true

    say "Welcome, you are now set up as a bot administrator who can receive messages from people who have asked for human support. You will receive messages from bot users as they come in. Otherwise, send a message that says 'help' at any time to exit the conversation or delete your data."
    hold

    if (event.to_lowercase() == "help") {
      goto admin_interface_step
    }
  }
  // if _whisperable is set, user is already an admin
  if (_whisperable == true) {
    goto admin_interface_step
  }
  else
    remember count = 0

    // conversation is triggered by a message from a user who says they need a vpn code
    // TODO Bitpart interprets incoming language. Response is in the same language
    say "Thank you for contacting [name].

[description]

We use a service called Bitpart to relay messages, which collects the same information as the Signal app does (namely the public key information associated with each account that is needed to encrypt messages between recipients)."

goto menu_step

menu_step:
    say "How many codes do you need? (Note that admin approval is needed for a request higher than [maxCodes] and will take longer.) Please enter the amount:"
    hold

    goto request_step

admin_interface_step:
  say Text("What would you like to do? Enter a number:

1. Exit this conversation
2. Delete my data")
  hold

  if (event == 1) {
    
    say "I am now closing this conversation. Please send a message again if you need me."

    goto end
  } else if (event == 2) {
    say "After this, you will need to send the passcode again if you need me."

    goto delete_me_confirm_step
  } else if (event.to_lowercase() == "help") {
    goto admin_interface_step
  } else {
    say "Sorry, the bot did not understand 🤖"

    goto admin_interface_step
  }

delete_me_confirm_step: // admins
  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.

Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Go back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "go back") {
    goto admin_interface_step
  } else
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto delete_me_confirm_step

delete_data_step: // end users
  if (count >= 3) {
    goto human_support_step
  }

  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.
  
Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.
  
Reply with 'Delete' to confirm.
  
Reply with 'Go back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "go back") {
    goto menu_step
  } else
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto delete_data_step

confirm_delete_step:
  say "All your data will now be deleted and you will no longer receive messages."
  delete
  goto end

request_step:
  if (count >= 3) {
    goto human_support_step
  }

  if (event <= [maxCodes]) {
    remember codesNumber = event
    goto share_codes_step
  } else if (event > [maxCodes]) {
    goto over_limit_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    say "You have asked for {{event}} codes. The limit is [maxCodes]. Please enter a lower number."

    remember count = count + 1

    hold

    goto request_step
  }

share_codes_step:
  say "You have asked for {{codesNumber}} codes."
  // get the codes from bitpart with external function call to EMS
  do unfilteredCodes = App("ems", method_id="VpnData", quantity=codesNumber.to_int() )
  do codes = parse_codes(unfilteredCodes)

  say "Here is the list of VPN codes:
  
{{codes}}"


  // TODO parse the bitpart data to list the codes if needed
  say "Here are instructions on how to activate the VPN codes.

[activationInstructions]"

  say "If you need further support please type 'Help'

Otherwise, please send us a message next time you need VPN codes."
  hold

  // TODO figure out how to timeout wait for reply OR update response list to end convo

  if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    goto i_dont_understand_step
  }

  goto end

over_limit_step:
  say "Sorry, your request is higher than the available limit of codes.

You can either:
Send a number lower than [maxCodes]
or
Reply with the number of codes you would like to request, for a team member to meet your request manually."
  hold

  if (event <= [maxCodes]) {
    goto request_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event > [maxCodes]) {
    remember request = event
    goto human_support_step
  }

human_support_step:
  // send request to admin
  say "Your request will be flagged with the team, who will be in touch as soon as possible (this may take up to [responseTime]). Is there any additional information you would like to share? Please share now, or reply with 'No' if not."

  hold

  if (event.to_lowercase() == "no") {
    remember problem = "No additional data was shared."
    goto delete_data_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else {
    remember problem = event

    goto contact_method_step
  }

i_dont_understand_step:
  // say "Sorry, this is an automated system, your request wasn't understood.
  //   \nIf you want to see commonly asked questions, reply with 'Help'
  //   \nIf you want to contact the team directly, reply with 'Human'"

  // removing FAQ step from this flow for now
  say "Sorry, the bot did not understand 🤖

If you want to contact the team directly, reply with 'Human'."
  hold

  if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "human" ) {
    goto human_support_step
  } else {
    goto i_dont_understand_step
  }

help_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("[faq]")

  hold

  [faq.answers] if (event == [faq.length]) {
  goto other_help_step
  }
  else if (event.to_lowercase() == "help" ) {
    goto human_support_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto help_step
  }

  say "We hope this answers your question.

Reply with 'Other' if your question was not answered.

Reply with 'Help' to go back to the list of questions.

Reply with 'End' to end the conversation for now."
  hold

  if (event.to_lowercase() == "other") {
    goto other_help_step
  } else if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else {
    say "Sorry, the bot did not understand 🤖"
    goto help_step
  }

check_if_solved_step:
  if (count >= 3) {
    goto other_help_step
  }

  say "Did that solve your problem?

Reply Yes or No."
  hold

  if (event.to_lowercase() == "yes") {
    say Text("Reply with 'help' to see the list of questions again. You can also say 'End' or 'Delete'")
    hold

    if (event.to_lowercase() == "help") {
      goto help_step
    } else if (event.to_lowercase() == "end") {
      say "Please contact us again if you need us."
      goto end
    } else if (event.to_lowercase() == "delete") {
      goto consent_disagree_step
    } 
    else
      say "Sorry, the bot did not understand 🤖"
      hold
      remember count = count + 1
      goto check_if_solved_step
  } else if (event.to_lowercase() == "no") {
    goto other_help_step
  } 
  else
    say "Sorry, the bot did not understand 🤖"
    hold
    remember count = count + 1
    goto check_if_solved_step

other_help_step:
  say "We've understood that you have a question not covered by the help section. Please type your question:"
  hold

  remember problem = event

  if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else {
    goto contact_method_step
  }

contact_method_step:
  say ("Thank you. How do you prefer we contact you? Please choose the number that corresponds with your preferred method.
  
1. Signal call
2. Signal text message
3. Phone call
4. Any
5. None, don't contact me")

  hold

  if (event == 1) {
    remember contact_preference = "signal call"
    goto record_number_step    
  } else if (event == 2) {
    remember contact_preference = "signal text message"
    goto record_number_step    
  } else if (event == 3) {
    remember contact_preference = "phone call"
    goto record_number_step    
  } else if (event == 4 || event == 5) {
    goto confirm_contact_method_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else {
    say "Sorry, the bot did not understand 🤖"
    goto contact_method_step
  }

record_number_step:
  say "Thank you. Your preference is noted. Please share your preferred phone number or Signal username, if applicable."
  hold

  remember contact_number = event

  // flag relevant data to bitpart
  whisper "A user had a problem not covered by the help section, and provided the following contact information: Via {{contact_preference}}, contact {{contact_number}}.
  
Here is the information they shared: {{problem}}"

  if (Exists("request")) {
    say "They requested {{request}} VPN codes."
  } 

  say "Thank you. An admin will continue this conversation. Please note that it might take some time for them to get in touch."

  goto end

confirm_contact_method_step:
  say Text("Reply 'Yes' to confirm we can use any method to contact you.
  
Reply 'Back' to go to the previous menu of options
    
Reply 'No' if you prefer to not be contacted.")
  hold

  if (event.to_lowercase() == "yes") {
    say "Thank you. Your preference is noted."

    whisper "A user had a problem not covered by the help section, and provided the following contact information: Via any method, contact {{contact_number}}.
    
Here is the information they shared: {{problem}}"

  if (Exists("request")) {
    say "They requested {{request}} VPN codes."
  } 

    // TODO SACHA do we accept another message after this?
  } else if (event.to_lowercase() == "no") {
    say "Ok, we will not contact you. Thanks again for the heads up."

    whisper "A user had a problem not covered by the help section: {{problem}}.
    
They sent this problem anonymously and did not wish to be contacted."

    goto end
  } else if (event.to_lowercase() == "back") {
    goto contact_method_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    goto confirm_contact_method_step
  }

  // goto end // we are not ending the conversation, uncomment if that changes
