// This is a template. It will not work before being processed by the system

fn parse_codes(c) {
  do codes_string = ""
  foreach (item) in c {
    do codes_string = codes_string + "Provider: {{item.provider}}
Code: {{item.secret}}
=====
"
  }

  return codes_string
}

start:
// if bitpart receives passcode, set admin
  do passcode = event.to_uppercase()

  if (passcode.contains("[passcode]")) {
    // set _whisperable var in memory
    remember _whisperable = true

    say "Welcome, you are now set up as a user who can receive messages from people who have asked for human support. You will receive messages from users as they come in. Otherwise, send a message that says 'help' at any time to exit the conversation or delete your data."
    hold

    if (event.to_lowercase() == "help") {
      goto admin_interface_step
    }
  }
  // if _whisperable is set, user is already an admin
  if (_whisperable == true) {
    goto admin_interface_step
  }
  else
    remember count = 0

    // conversation is triggered by a message from a user who says they need a vpn code
    // TODO Bitpart interprets incoming language. Response is in the same language
    say "Thank you for contacting [name]. [description] We're using a secure automated messaging system so you can get quicker responses.

Your phone number or username will be stored (encrypted) while you interact with this number, but will be deleted after you end the conversation.

We offer VPN codes from [vpnName] which works in [locations]."

goto menu_step

menu_step:
    say "How many codes do you need? (Note that admin approval is needed for a request higher than [maxCodes] and will take longer.) Please enter the amount:"
    hold

    goto request_step

admin_interface_step:
  say Text("What would you like to do? Enter a number:

1. Exit this conversation
2. Delete my data")
  hold

  if (event == 1) {
    
    say "I am now closing this conversation. Please send the passcode again if you need me."

    goto end
  } else if (event == 2) {
    say "I am now closing this conversation. Please send the passcode again if you need me."

    goto delete_me_confirm_step
  } else if (event.to_lowercase() == "help") {
    goto admin_interface_step
  } else {
    say "Sorry, I did not get that. Please select an option from the list."

    goto admin_interface_step
  }

delete_me_confirm_step: // admins
  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.

Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Go back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "go back") {
    goto admin_interface_step
  } else
    say "Sorry, I did not get that."
    remember count = count + 1
    goto delete_me_confirm_step

delete_data_step: // end users
  if (count >= 3) {
    goto human_support_step
  }

  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.
  
Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.
  
Reply with 'Delete' to confirm.
  
Reply with 'Go back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "go back") {
    goto menu_step
  } else
    say "Sorry, I did not get that."
    remember count = count + 1
    goto delete_data_step

confirm_delete_step:
  say "All your data will now be deleted and you will no longer receive messages."
  delete
  goto end

request_step:
  if (count >= 3) {
    goto human_support_step
  }

  if (event <= [maxCodes]) {
    remember codesNumber = event
    goto share_codes_step
  } else if (event > [maxCodes]) {
    goto over_limit_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    say "You have asked for {{event}} codes. The limit is [maxCodes]"

    say "Sorry, I did not get that. Please enter a number."
    remember count = count + 1
    goto request_step
  }

share_codes_step:
  say "You have asked for {{codesNumber}} codes."
  // get the codes from bitpart with external function call to EMS
  do unfilteredCodes = App("ems", method_id="VpnData", quantity=codesNumber.to_int() )
  do codes = parse_codes(unfilteredCodes)

  say "Here is the list of VPN codes:
  
{{codes}}"


  // TODO parse the bitpart data to list the codes if needed
  say "Here are instructions on how to activate the VPN codes.

[activationInstructions]"

  say "If you need further support please type 'Help'

Otherwise, please send us a message next time you need VPN codes."
  hold

  // TODO figure out how to timeout wait for reply OR update response list to end convo

  if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    goto i_dont_understand_step
  }

  goto end

over_limit_step:
  say "I'm sorry, your request is higher than the available limit of codes.

You can either:
Send a number lower than [maxCodes]
or
Reply with 'Human' for a team member to meet your request manually."
  hold

  if (event <= [maxCodes]) {
    goto request_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "human") {
    // TODO save request to send to help step
    goto human_support_step
  }

human_support_step:
  // send request to admin
  say "Your request has been flagged with the team, who will be in touch as soon as possible (this may take up to [responseTime])." // TODO Sacha: # of days or ASAP?

  whisper "A user has asked for help with VPN codes: {{event.client.user_id}}"
  goto end

  // TODO SACHA: say something to close out convo?

i_dont_understand_step:
  // say "Sorry, this is an automated system, your request wasn't understood.
  //   \nIf you want to see commonly asked questions, reply with 'Help'
  //   \nIf you want to contact the team directly, reply with 'Human'"

  // removing FAQ step from this flow for now
  say "Sorry, this is an automated system, your request wasn't understood.

If you want to contact the team directly, reply with 'Human'."
  hold

  if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "human" ) {
    goto human_support_step
  } else {
    goto i_dont_understand_step
  }

help_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("[faq]")

  hold

  [faq.answers] if (event == [faq.length]) {
  goto other_help_step
  }
  else if (event.to_lowercase() == "help" ) {
    goto human_support_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else {
    say "Sorry, I did not get that."
    remember count = count + 1
    goto help_step
  }

  say "We hope this answers your question.

Reply with 'Other' if your question was not answered.

Reply with 'Help' to go back to the list of questions.

Reply with 'End' to end the conversation for now."
  hold

  if (event.to_lowercase() == "other") {
    goto other_help_step
  } else if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else {
    say "Sorry, I did not get that."
    goto help_step
  }

other_help_step:
  say "We've understood that you have a question not covered by the help section. Please type your question:"
  hold

  do question = event

  //send question to bitpart, who can later update help section depending on questions asked
  whisper "A user asked the following question of the broadcast list, which they were unable to solve: {{question}}. They can be contacted at {{event.client.user_id}}"
  
  say "Your request has been flagged with the team, who will be in touch as soon as possible (this may take up to [responseTime])."

  goto end