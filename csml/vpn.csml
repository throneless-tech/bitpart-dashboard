// This is a template. It will not work before being processed by the system

start:
// if bitpart receives passcode, set admin
  if (event.contains([passcode])) {
    // set _whisperable var in memory
    remember _whisperable = true

    say "Welcome, you are now set up as a user who can receive messages from people who have asked for human support. You will receive messages from users as they come in. Otherwise, send a message that says 'help' at any time to exit the conversation or delete your data. "
    hold

    if (event.to_lowercase() == "help") {
      goto admin_interface_step
    }
  }
  // if _whisperable is set, user is already an admin
  if (event._whisperable == true) {
    goto admin_interface_step
  }
  else
    remember count = 0

    // conversation is triggered by a message from a user who says they need a vpn code
    // TODO Bitpart interprets incoming language. Response is in the same language
    say "Thank you for contacting [name]. [description] We're using a secure automated messaging system so you can get quicker responses.
      \nYour phone number or username will be stored (encrypted) while you interact with this number, but will be deleted after you end the conversation.
      \nWe offer VPN codes from [vpnName] which works in [locations]."
    // TODO 
    say "How many codes do you need? (Note that admin approval is needed for a request higher than [maxCodes] and will take longer.) Please enter the amount:"
    hold

    goto request_step

admin_interface_step:
  say "What would you like to do? Enter a number:\n\n
  1) Receive messages\n
  2) Exit this conversation\n
  3) Delete my data"
  hold

  if (event == 1) {
    
    // TODO JOSH: how does the admin ask for the messages left for them?

    goto admin_interface_step
  } else if (event == 2) {
    say "I am now closing this conversation. Please send the passcode again if you need me."

    goto end
  } else if (event == 3) {
    goto delete_me_confirm_step
  } else if (event.to_lowercase() == "help") {
    goto admin_interface_step
  } else {
    say "Sorry, I did not get that. Please select an option from the list."

    goto admin_interface_step
  }

delete_me_confirm_step:
  say "You have asked that you be removed from the conversation and all your data be deleted from the system.\nOnce this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.\nReply with 'Delete' to confirm.\nReply with 'Go back' to go back to the beginning."
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "go back") {
    goto admin_interface_step
  } else
    say "Sorry, I did not get that."
    do count += 1
    goto delete_me_confirm_step

confirm_delete_step:
  say "All your data will now be deleted and you will no longer receive messages."
  // delete // FIXME UNCOMMENT FOR PROD
  goto end

request_step:
  if (count >= 3) {
    goto human_support_step
  }

  if (event <= [maxCodes]) {
    goto share_codes_step
  } else if (event > [maxCodes]) {
    goto over_limit_step
  } else {
    say "Sorry, I did not get that. Please enter a number."
    do count += 1
    goto request_step
  }

share_codes_step:
  // TODO get the codes from bitpart with external function call to EMS
  say "Here is the list of VPN codes:"
  // TODO parse the bitpart data to list the codes
  say "Here are instructions on how to activate the VPN codes.
    \n\n[activationInstructions]"
  say "If you need further support please type 'Help'
    \nOtherwise, please send us a message next time you need VPN codes."
  hold

  // TODO figure out how to timeout wait for reply OR update response list to end convo

  if (event.to_lowercase() == 'help') {
    goto help_step
  } else {
    goto i_dont_understand_step
  }

  goto end

over_limit_step:
  say "I'm sorry, your request is higher than the available limit of codes.
    \nYou can either:
    \nSend a number lower than [maxCodes]
    \nor
    \nReply with 'Human' for a team member to meet your request manually."
  hold

  if (event.is_number()) {
    goto request_step
  } else if (event.to_lowercase() == "human") {
    // TODO save request to send to help step
    goto human_support_step
  }

human_support_step:
  // send request to admin
  say "Your request has been flagged with the team, who will be in touch as soon as possible (this may take up to [responseTime])." // TODO Sacha: # of days or ASAP?

  // whisper [adminPhones.array] "A user has asked for help with VPN codes: {{event.client.user_id}}" // FIXME UNCOMMENT FOR PROD

  // delete // FIXME UNCOMMENT FOR PROD

  goto end

  // TODO SACHA: say something to close out convo?

i_dont_understand_step:
  say "Sorry, this is an automated system, your request wasn't understood.
    \nIf you want to see commonly asked questions, reply with 'Help'
    \nIf you want to contact the team directly, reply with 'Human'"
  hold

  if (event.to_lowercase() == 'help') {
    goto help_step
  } else if (event.to_lowercase() == 'human' ) {
    goto human_support_step
  } else {
    goto i_dont_understand_step
  }

help_step:
  if (count >= 3) {
    goto human_support_step
  }

  say "Help
    \nHere are some frequently asked questions:
    \n[faq]"
  hold

  [faq.answers]

  if (event.to_lowercase() == 'help' ) {
    goto human_support_step
  } else {
    say "Sorry, I did not get that."
    do count += 1
    goto help_step
  }

  say "We hope this answers your question.
    \nReply with 'Other' if your question was not answered.
    \nReply with 'Help' to go back to the list of questions.
    \nReply with 'End' to end the conversation for now."
  hold

  if (event.to_lowercase() == "other") {
    other_help_step
  } else if (event.to_lowercase() == "help") {
    goto help_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
  // delete // FIXME UNCOMMENT FOR PROD
    goto end
  } else {
    say "Sorry, I did not get that."
    goto help_step
  }

other_help_step:
  say "We've understood that you have a question not covered by the help section. Please type your question:"
  hold

  do question = event

  //send question to bitpart, who can later update help section depending on questions asked
  // whisper [adminPhones.array] "A user asked the following question of the broadcast list, which they were unable to solve: {{question}}. They can be contacted at {{event.client.user_id}}" // FIXME UNCOMMENT FOR PROD
  
  say "Your request has been flagged with the team, who will be in touch as soon as possible (this may take up to [responseTime])."

  // delete // FIXME UNCOMMENT FOR PROD
  goto end