// This is a template. It will not work before being processed by the system

start:
  // if bitpart receives passcode, set admin
  remember attempt = 0
  remember count = 0
  do passcode = event.to_uppercase()

  // if _whisperable is set, user is already an admin
  if (_whisperable == true) {
    goto admin_interface_step
  }

  if (passcode.contains("[passcode]")) {
    // set _whisperable var in memory
    remember _whisperable = true

    say Text("Welcome, you are now set up as a bot administrator who can receive helpdesk messages from people who have asked for human support. You will receive messages from bot users as they come in. Otherwise, send a message that says 'Help' at any time to exit the conversation or delete your data.")
   
    goto admin_interface_step

  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  }

  else 
    if (count >= 3) {
      goto submit_question_step
    }

    goto user_welcome_step

admin_passcode_step:
  say "Please enter your admin passcode now, or reply with 'Exit' to exit administrator mode."
  
  hold
  
  do passcode = event.to_uppercase()

  if (passcode.contains("[passcode]")) {
    remember _whisperable = true

    say Text("Welcome, you are now set up as a bot administrator who can receive helpdesk messages from people who have asked for human support. You will receive messages from bot users as they come in. Otherwise, send a message that says 'Help' at any time to exit the conversation or delete your data.")
    
    goto admin_interface_step
  } else if (event.to_lowercase() == "exit") {
      remember _whisperable = false
      
      goto user_welcome_step
  } else if (attempt >= 3) {
    // TODO set flagged on bitpart server
    remember _whisperable = false
    
    say "You have tried to login too many times. Please contact an administrator for help."

    goto user_welcome_step
  } else {
    say "Incorrect passcode."
  
    remember attempt = attempt + 1

    goto admin_passcode_step
  }

admin_interface_step:
  say Text("What would you like to do? Enter a number:

1. Exit this conversation and interact as a bot user
2. Delete my data

You do not need to do anything else to receive messages.")
  hold

  if (event == 1) {
    say "You can send a message that says 'Admin' at any time to return to this menu."
    remember _whisperable = false
    goto user_welcome_step
  } else if (event == 2) {
    goto delete_me_confirm_step
  } else if (event.to_lowercase() == "help") {
    goto admin_interface_step
  } else {
    say "Sorry, the bot did not understand 🤖"

    goto admin_interface_step
  }

user_welcome_step:
  if (count >= 3) {
    goto human_support_step
  }
    // TODO Bitpart interprets incoming language. Response is in the same language
    say Text("Thank you for contacting [name]. [description] We use a secure automated messaging system so you can get quicker answers to problems, and our team is on hand to help.

We use a service called Bitpart to relay messages, which collects the same information as the Signal app does (namely the public key information associated with each account that is needed to encrypt messages between recipients).  

If you are in immediate physical danger contact [referral].")

    // TODO: user research needed about if we want bitpart to accept voice notes
    say Text("Our helpdesk will ask you to select the problem you're experiencing.

[storageAccess]

We will not ask you for personal information.

For more information at any time, including how to delete your data, you can reply with 'My data'.

To continue, reply with 'Agree'.

To disagree and end the conversation, reply with 'End'.")
    hold

    if (event.to_lowercase() == "my data") {
      goto privacy_policy_step
    } else if (event.to_lowercase() == "agree") {
      goto menu_step
    } else if (event.to_lowercase() == "end" || event.to_lowercase() == "delete") {
      goto delete_data_step
    } else if (event.to_lowercase() == "admin") {
      goto admin_passcode_step
    } else {
      say "Sorry, the bot did not understand 🤖"
      goto user_welcome_step
    }

delete_me_confirm_step:
  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.
  
Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "back") {
    goto admin_interface_step
  } else
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto delete_me_confirm_step

confirm_delete_step:
  say "Your information has been deleted from the bot's system and you will no longer receive messages."
  delete
  goto end

privacy_policy_step:
  if (count >= 3) {
    goto human_support_step
  }
  say Text("My data
  
[privacyPolicy]")
  say Text("Reply with 'Agree' and continue to the main menu
  
Reply with 'Delete' to delete your data.")
  hold

  // Agree and return to menu, disagree and delete data
  if (event.to_lowercase() == "agree") {
    goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto privacy_policy_step

delete_data_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system.
  
Once this happens, you will no longer receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Back' to go back to the menu.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "back" || event.to_lowercase() == "menu" || event.to_lowercase() == "faq") {
    goto menu_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto delete_data_step

menu_step:
  if (count >= 3) {
    say "Sorry, the bot did not understand 🤖"
    goto human_support_step
  }
  
  say Text("[problems]")
  hold

  [problems.solutions] if (event == [problems.length]) {
    goto human_support_step
  }
  else if (event.to_lowercase() == "faq") {
    goto menu_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    remember count = count + 1
    say "Sorry, the bot did not understand 🤖"
    goto menu_step
  }

check_if_solved_step:
  if (count >= 3) {
    goto human_support_step
  }

  say Text("Did that solve your problem?

Reply 'Yes' or 'No'.")
  hold

  if (event.to_lowercase() == "yes") {
    goto menu_options_step
  } else if (event.to_lowercase() == "no") {
    goto human_support_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto check_if_solved_step
  }

menu_options_step:
  if (count >= 3) {
    say "Sorry, the bot did not understand 🤖"
    goto human_support_step
  }
  
  say Text("Glad that helped.
  
Reply with 'FAQ' to return to ask further questions.

Reply with 'Delete' to delete your data from our system.

Reply with 'End' to end this conversation.
  
Remember that if this is a sensitive conversation you can delete the conversation from the Signal app.")
  hold 

  if (event.to_lowercase() == "faq") {
    goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto check_if_solved_step
  }

human_support_step:
  say "We've understood that you have a question not covered above.
  
Please note that if we have forwarding set up, your question will be forwarded to team members' Signal accounts.

Please type your question:"

  hold

  remember problem = event

  if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    goto contact_method_step
  }
  
  // goto end // we are not ending the conversation, uncomment if that changes

contact_method_step:
  say ("Thank you. When you provide contact information, please note that if we have forwarding set up, it will be forwarded to team members' Signal accounts. 

How do you prefer we contact you? Please choose the number that corresponds with your preferred method.
  
1. Signal call
2. Signal text message
3. Phone call
4. Any
5. None, don't contact me")

  hold

  if (event == 1) {
    remember contact_preference = "signal call"
    goto record_number_step    
  } else if (event == 2) {
    remember contact_preference = "signal text message"
    goto record_number_step    
  } else if (event == 3) {
    remember contact_preference = "phone call"
    goto record_number_step    
  } else if (event == 4) {
    remember contact_preference = "any method"
    goto record_number_step
  } else if (event == 5) {
    remember contact_preference = event
    goto confirm_no_contact_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "end") {
    say "Please contact us again if you need us."
    goto end
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    goto contact_method_step
  }

record_number_step:
  say "Thank you. Your preference is noted. Please share your preferred phone number or Signal username, if applicable."
  hold

  remember contact_number = event

  // flag relevant data to bitpart
  whisper "A user had a problem not covered by the helpdesk, and provided the following contact information: Via {{contact_preference}}, contact {{contact_number}}.
  
Here is the problem they experienced: {{problem}}"

  say "Thank you. An admin will continue this conversation. They will aim to be in touch with you within [responseTime]."

  goto end

confirm_no_contact_step:
  say Text("Reply 'No' to confirm we will not contact you.

Reply 'Back' to go to the previous menu of options")

  hold

  if (event.to_lowercase() == "no") {
    say "Ok, we will not contact you."

    whisper "A user had a problem not covered by the helpdesk: {{problem}}.
    
They sent this problem anonymously and did not wish to be contacted."

    goto end
  } else if (event.to_lowercase() == "back") {
    goto contact_method_step
  } else if (event.to_lowercase() == "my data") {
    goto privacy_policy_step
  } else if (event.to_lowercase() == "delete") {
    goto delete_data_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    goto confirm_contact_method_step
  }

  // goto end // we are not ending the conversation, uncomment if that changes
