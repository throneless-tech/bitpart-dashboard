// This is a template. It will not work before being processed by the system

start:
  // if bitpart receives passcode, set admin
  remember attempt = 0
  remember count = 0
  do passcode = event.to_uppercase()

  // if _whisperable is set, user is already an admin
  if (_whisperable == true) {
    goto admin_interface_step
  }

  if (passcode.contains("[passcode]")) {
    // set _whisperable var in memory
    remember _whisperable = true

    say "Welcome, you are now set up as a bot administrator for [name]. You can now send broadcast messages."
    
    goto admin_interface_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  }
  else
    if (count >= 3) {
      goto submit_question_step
    }

    goto user_welcome_step

admin_passcode_step:
  say "Please enter your admin passcode now, or reply with 'Exit' to exit administrator mode."
  
  hold
  
  do passcode = event.to_uppercase()

  if (passcode.contains("[passcode]")) {
    remember _whisperable = true

    say "Welcome, you are now set up as a bot administrator who can send broadcast messages."
    
    goto admin_interface_step
  } else if (event.to_lowercase() == "exit") {
      remember _whisperable = false
      
      goto user_welcome_step
  } else if (attempt >= 3) {
    // TODO set flagged on bitpart server
    remember _whisperable = false
    
    say "You have tried to login too many times. Please contact an administrator for help."

    goto user_welcome_step
  } else {
    say "Incorrect passcode."

    remember attempt = attempt + 1

    goto admin_passcode_step
  }

admin_interface_step:
  say Text("What would you like to do? Enter a number:

1. Broadcast a message
2. Exit this conversation and interact as a bot user
3. Delete my data")
  hold

  if (event == 1) {
    say "Please send me your message now."
    hold

    shout event

    say "Your message has been sent."

    goto admin_interface_step
  } else if (event == 2) {
    say "You can send a message that says 'Admin' at any time to return to this menu."
    remember _whisperable = false
    goto user_welcome_step
  } else if (event == 3) {
    goto delete_me_confirm_step
  } else {
    say "Sorry, the bot did not understand 🤖"

    goto admin_interface_step
  }

user_welcome_step:
  say Text("Hi. You have found the broadcast channel [name].

We use a service called Bitpart to relay messages, which collects the same information as the Signal app does (namely the public key information associated with each account that is needed to encrypt messages between recipients).  

You can agree, and receive periodic messages.   

You can disagree, and end the conversation.")

  say Text("Agree - I want to be added to the broadcast channel and consent to receiving messages

Disagree - please remove me from the broadcast channel

Reply with 'Agree' or 'Disagree'.")

  hold

  if (event.to_lowercase() == "agree") {
    goto consent_agree_step
  } else if (event.to_lowercase() == "disagree") {
    goto consent_disagree_step
  } else if (event.to_lowercase() == "menu") {
    goto menu_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  }
  else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto start
  }

delete_me_confirm_step:
  say Text("You have asked that you be removed from the conversation and all your data be deleted from the system

Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "back") {
    goto admin_interface_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto delete_me_confirm_step
  }

consent_disagree_step:
  if (count >= 3) {
    goto submit_question_step
  }

  say Text("You have asked that you be removed from the channel and all your data be deleted from the system.
  
Once this happens, you will no longer be able to receive messages from this number, unless you send a message to it again.

Reply with 'Delete' to confirm.

Reply with 'Back' to go back to the beginning.")
  hold

  if (event.to_lowercase() == "delete") {
    goto confirm_delete_step
  } else if (event.to_lowercase() == "back") {
    goto user_welcome_step
  } else if (event.to_lowercase() == "menu") {
    goto menu_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  }
  else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto consent_disagree_step
  }

confirm_delete_step:
  say "Your information has been deleted from the bot's system and you will no longer receive messages."
  delete
  goto end

consent_agree_step:
  say "Confirmed, we've added you to the channel.

Welcome!"
  goto menu_step

menu_step:
  if (count >= 3) {
    goto submit_question_step
  }

  do safetyTips = "[safetyTips]"
  do tipsLength = safetyTips.length()
  do testLength = "This is a random sentence"
  do testLen = testLength.length()
  do faqLength = [faq.length]

  if (tipsLength > 0 && faqLength > 0) {
      say Text("Menu

Reply with the corresponding number:

1. About this channel
2. Safety tips
3. Frequently asked questions (FAQ)

You have the right to be forgotten. At any time, send 'Delete' to stop receiving messages and be removed from this channel.

Send 'Menu' at any time to come back to this menu.")
  } else if ((tipsLength == 0 || tipsLength == Null) && faqLength > 0) {
    say Text("Menu

Reply with the corresponding number:

1. About this channel
2. Frequently asked questions (FAQ)

You have the right to be forgotten. At any time, send 'Delete' to stop receiving messages and be removed from this channel.

Send 'Menu' at any time to come back to this menu.")
  } else if ((tipsLength > 0) && (faqLength == 0 || faqLength == Null || faqLength == [null])) {
    say Text("Menu

Reply with the corresponding number:

1. About this channel
2. Safety tips

You have the right to be forgotten. At any time, send 'Delete' to stop receiving messages and be removed from this channel.

Send 'Menu' at any time to come back to this menu.")
  } else if ((tipsLength == 0) && (faqLength == Null || faqLength == 0 || faqLength == [null])) {
    say Text("Menu

Reply with the corresponding number:

1. About this channel

You have the right to be forgotten. At any time, send 'Delete' to stop receiving messages and be removed from this channel.

Send 'Menu' at any time to come back to this menu.")
  }
  hold

  if (event == 1) {
    say "This is a way to receive messages without being in a group (which can potentially compromise everyone in the group).
    
[description]"
    goto await_reply_step
  } else if (event == 2 && tipsLength > 0) {
    say Text("Safety tips

[safetyTips]")
    goto await_reply_step
  } else if (event == 2 && (tipsLength == 0 || tipsLength == Null) && faqLength > 0) {
    goto faq_step
  } else if (event == 3 && tipsLength > 0 && faqLength > 0) {
    goto faq_step
  } else if (event.to_lowercase() == "menu") {
    goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto consent_disagree_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  }
  else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto menu_step
  }

await_reply_step:
  if (count >= 3) {
    goto submit_question_step
  }
  
  hold

  if (event == 1) {
    say "This is a way to receive messages without being in a group (which can potentially compromise everyone in the group).
    
[description]"
    goto await_reply_step
  } else if (event == 2) {
    say Text("Safety tips

[safetyTips]")

    goto await_reply_step

  } else if (event == 3) {
        goto faq_step
  } else if (event.to_lowercase() == "menu") {
    goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto consent_disagree_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  }
  else {
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    goto menu_step
  }

faq_step:
  if (count >= 3) {
    goto submit_question_step
  }

  say Text("[faq]")
  hold

  [faq.answers] if (event == [faq.length]) {
  goto submit_question_step
  }
  else if (event.to_lowercase() == "menu") {
    goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto consent_disagree_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } 
  else 
    say "Sorry, the bot did not understand 🤖"

  say Text("Reply with 'FAQ' to see the list of questions.
  
Reply with 'Menu' to return home.")
  hold

  if (event.to_lowercase() == "faq" ||  event.to_lowercase() == "faq") {
    goto faq_step
  } else if (event.to_lowercase() == "main menu" ||  event.to_lowercase() == "menu") {
    goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto consent_disagree_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } 
  else
    say "Sorry, the bot did not understand 🤖"
    remember count = count + 1
    if (count >= 3) {
      goto submit_question_step
    } else if (event.to_lowercase() == "admin") {
      goto admin_passcode_step
    } 
    else
      goto faq_step

check_if_solved_step:
  if (count >= 3) {
    goto submit_question_step
  }

  say "Did that solve your problem?

Reply Yes or No."
  hold

  if (event.to_lowercase() == "yes") {
    say Text("Reply with 'FAQ' to see the list of questions.
    
Reply with 'Menu' to return home.")
    hold

    if (event.to_lowercase() == "faq" ||  event.to_lowercase() == "faq") {
      goto faq_step
    } else if (event.to_lowercase() == "main menu" ||  event.to_lowercase() == "menu") {
      goto menu_step
    } else if (event.to_lowercase() == "delete") {
      goto consent_disagree_step
    } else if (event.to_lowercase() == "admin") {
      goto admin_passcode_step
    } 
    else
      say "Sorry, the bot did not understand 🤖"
      hold
      remember count = count + 1
      goto check_if_solved_step
  } else if (event.to_lowercase() == "no") {
    goto submit_question_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } 
  else
    say "Sorry, the bot did not understand 🤖"
    hold
    remember count = count + 1
    goto check_if_solved_step

submit_question_step:
  say "We've understood that you have a question not covered by the FAQ. Please reach out to [referral] for support.
  
At any time, send 'Delete' to stop receiving messages and be removed from this channel."
  remember count = 0
  hold

  if (event.to_lowercase() == "main menu" ||  event.to_lowercase() == "menu") {
      goto menu_step
  } else if (event.to_lowercase() == "delete") {
    goto consent_disagree_step
  } else if (event.to_lowercase() == "admin") {
    goto admin_passcode_step
  } 
  else
    say "Sorry, the bot did not understand 🤖"

    goto submit_question_step
  // hold

  // remember problem = event

  // bitpart flags conversation to list owner
  // whisper "A user asked the following question of the broadcast list, which they were unable to solve: {{problem}}. They can be contacted at {{event.content.client.user_id}}"

  // say "Thank you. The list owner will continue this conversation. Please note that it might take some time for them to get in touch."

  // say "We will contact you again the next time an admin broadcasts a message."

  // goto end // we are not ending the conversation, uncomment if that changes
